public partial class Form1 : Form
{
public Form1()
{
InitializeComponent();
Invalidate();
}

private void Form1_Paint(object sender, PaintEventArgs e)
{

}
}

pictureBox1.Invalidate();

class Button : ... {

public event EventHandler Click;

protected virtual void OnClick(){
if (Click != null)
Click(this, EventArgs.Empty);
}

private void Dummy(){
OnClick();
Console.WriteLine("Event fired");
}

public MyClass() {

private Button myButton = new Button();

public MyClass(){
myButton.Click += myButton_Click;
}

private void myButton_Click(object sender, EventArgs e){
Console.WriteLine("Event handled");
}

}

Button создает событие и вызывает его, MyClass - вешает хэндлер и обрабатывает событие

ЗЫ писал тут, так что если будет пара синтаксических ошибок - извиняйте.


Код
namespace TryHandling3
{
public class MyTextBox : System.Windows.Forms.TextBox
{
 const int WM_CHAR = 258;

 public event KeyPressEventHandler MyKeyPress;

 public MyTextBox()
 {
 }
 protected override void WndProc(ref Message m)
 {
  switch(m.Msg)
  {
   case WM_CHAR:
   {
    if(MyKeyPress != null)
    {
     KeyPressEventArgs e = new KeyPressEventArgs((char)m.WParam);
     OnMyKeyPress(e);
     return;
    }
    break;
   }
  }
  base.WndProc (ref m);
 }

 protected virtual void OnMyKeyPress(KeyPressEventArgs e)
 {
  MyKeyPress(this, e);
 }

}
}



